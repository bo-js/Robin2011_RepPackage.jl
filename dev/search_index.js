var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Robin2011_RepPackage","category":"page"},{"location":"#Robin2011_RepPackage","page":"Home","title":"Robin2011_RepPackage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Robin2011_RepPackage.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Robin2011_RepPackage]","category":"page"},{"location":"#Robin2011_RepPackage.SurplusVFI-Tuple{Matrix, Matrix, Matrix}","page":"Home","title":"Robin2011_RepPackage.SurplusVFI","text":"SurplusVFI(p::Matrix, z::Matrix, Π::Matrix; β::Number = 0.9466)\n\nPerforms Value Function Iteration on the Surplus Function, returns the resulting Surplus function matrix.\n\nTakes as inputs the matrix of match productivities p, the matrix of home production z, the markov transition matrix Π, and the parameter β as a keyword argument.\n\nβ should be set to equal (1-δ)/(1+r), it's default is the value used in Robin(2011).\n\n\n\n\n\n","category":"method"},{"location":"#Robin2011_RepPackage.WageVFI-Tuple{Matrix, Matrix, Matrix}","page":"Home","title":"Robin2011_RepPackage.WageVFI","text":"WageVFI(S::Matrix, Π::Matrix, z::Matrix; λ1 = 0.119, β::Number = 0.9466)\n\nThis function calculates equilibrium wages, as well as their associated value functions.\n\nWages are assigned through Bertrand Competition, resulting either in workers being paid their reservaiton wage (the monopsony wage), when being hired from unemployment, or capturing the full surplus when being poached.\n\nThe Function returns a Dict with keys:\n\n:wmin, an i x j matrix giving the monopsony wage assigned to worker j, being hired out of unemployment in state i.\n:wmax, an i x j matrix giving the full surplus wage assigned to worker j, being poached in state i.\n:Wmin, an i x j x k array giving the value of worker k, being in state i, with the monopsony wage from state j.\n:Wmax, an i x j x k array giving the value of worker k, being in state i, with the poacher's wage from state j.\n\nThe Function takes as arguments:\n\nS, the surplus matrix, calculated using SurplusVFI.\nΠ, the markov transition matrix, calculated using grids.\nz, the home production matrix, calculated using homeprod.\n\nAs well as parameters:\n\nλ1, the probability of meeting a new employer while already employed.\nβ, the discounted probability of exogenenous separation, i.e. (1 - δ)/(1+r).\n\nThe default parameter values are those used in Robin(2011).\n\n\n\n\n\n","category":"method"},{"location":"#Robin2011_RepPackage.estCrit-Tuple{Any}","page":"Home","title":"Robin2011_RepPackage.estCrit","text":"estCrit(b; M = 500, N = 100, τ = 0.5, α = 0.64, r = 0.05/4, T = 5000, burn = 1000, draw = rand(burn+T, 1), b0 = [1, 0.0226, 0.9136, 0.0579, 0.2141, 2.5296, 0.7842])\n\nestCrit takes a set of transformed parameter values b, simulates an economy of length T+burn based on an evolution of the aggregate state given in the keyword argument draw (which should be a T+burn long series of draws from a Unif(0,1) distribution), drops the first draw periods and  calculates the simulated targeted moments, before finally calculating the distance from the equivalent moments in the data, given by keyword argument b0.\n\nb should be a vector which contains a guess of the parameters to be estimated. They should be ordered and transformed in the following way:\n\nlog(ν)\nlog(μ)\nloginv(δ)\nloginv(λ0)\natanh(ρ)\nlog(σ)\nlog(z0)\nlog(C)\n\nWhere logit = x -> 1/(1+exp(x)) and loginv = x -> log(1/x - 1).\n\nExternal parameters are given by the following keyword arguments, with defaults set to those used in Robin (2011).\n\nτ is the tie-breaking probability for poachers\nα is the elasticity of wages to productivity - this doesn't matter for estimation but must be specified.\nr is the interest rate.\n\nOther keyword arguments include\n\nM the length of the worker ability grid\nN the length of the aggregate state grid\nT the number of time periods to be used in the estimation\nburn the number of additional time periods to be simulated at the beginning of the economy and then dropped to remove reliance on starting values.\nb0 a vector of the moments calculated from the data.\n\nThe targeted moments are:\n\nAverage Productivity\nStandard Deviation of Productivity\nAutocorrelation of Productivity\nAverage Unemployment Rate\nStandard Deviation of the Unemployment Rate\nKurtosis of the Unemployment Rate\nAverage Exit Rate from Unemployment\n\n\n\n\n\n","category":"method"},{"location":"#Robin2011_RepPackage.grids-Tuple{}","page":"Home","title":"Robin2011_RepPackage.grids","text":"grids(; M = 500, N = 100, ρ = 0.913702234286476, σ = 0.0257,ν::Number = 2.019365636076711, μ::Number = 5.786082109731152 )\n\nThis function takes parameter values and constructs the grids and distributions of worker types and aggregate shocks, which it returns in a Dict.\n\n\n\n\n\n","category":"method"},{"location":"#Robin2011_RepPackage.homeprod-Tuple{Vector, Vector}","page":"Home","title":"Robin2011_RepPackage.homeprod","text":"homeprod(x::Vector, y::Vector; B::Number = 1, C::Number = 0.726, α::Number = 0.64, z0::Number = 0.767)\n\nTakes the worker and aggregate state grids, as well as the parameters B, C, α, and returns the matrix of home production.\n\nDefault parameter values are those used in Robin (2011).\n\n\n\n\n\n","category":"method"},{"location":"#Robin2011_RepPackage.matchprod-Tuple{Vector, Vector}","page":"Home","title":"Robin2011_RepPackage.matchprod","text":"matchprod(x::Vector, y::Vector; B::Number = 1, C::Number = 0.725767358913686)\n\nTakes the worker and aggregate state grids, as well as the parameters B and C, and returns the matrix of match productivities.\n\nDefault parameter values are those used in Robin (2011).\n\n\n\n\n\n","category":"method"},{"location":"#Robin2011_RepPackage.params_estimated-Tuple{}","page":"Home","title":"Robin2011_RepPackage.params_estimated","text":"params_estimated(; path = \"x1.txt\")\n\nThis function outputs all necessary parameters for the model, from a set of estimated parameters.\n\nAs it's input it takes a file path, which must point to a .txt file containing the parameter values correctly ordered, line separated, and transformed as in estmain.jl. \n\nThe function then performs the appropriate inverse transformations and returns the parameters as a NamedTuple. \n\nThe default file path points to those estimated by estmain.jl, stored in x1.txt. Alternatively to use those from Robin(2011), replace this with x0.txt. \n\nThe parameters must be stored in the text file in the following order with the following transformations.\n\nlog(ν)\nlog(μ)\nloginv(δ)\nloginv(λ0)\natanh(ρ)\nlog(σ)\nlog(z0)\nlog(C)\n\nWhere logit = x -> 1/(1+exp(x)) and loginv = x -> log(1/x - 1).\n\n\n\n\n\n","category":"method"}]
}
